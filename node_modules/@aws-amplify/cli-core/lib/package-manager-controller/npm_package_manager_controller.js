import { existsSync as _existsSync } from 'fs';
import _fsp from 'fs/promises';
import { execa as _execa } from 'execa';
import * as _path from 'path';
import { executeWithDebugLogger as _executeWithDebugLogger } from './execute_with_debugger_logger.js';
import { PackageManagerControllerBase } from './package_manager_controller_base.js';
/**
 * NpmPackageManagerController is an abstraction around npm commands that are needed to initialize a project and install dependencies
 */
export class NpmPackageManagerController extends PackageManagerControllerBase {
    cwd;
    fsp;
    path;
    execa;
    executeWithDebugLogger;
    existsSync;
    /**
     * constructor
     */
    constructor(cwd, fsp = _fsp, path = _path, execa = _execa, executeWithDebugLogger = _executeWithDebugLogger, existsSync = _existsSync) {
        super(cwd, 'npm', 'npx', ['init', '--yes'], 'install', fsp, path, execa, executeWithDebugLogger, existsSync);
        this.cwd = cwd;
        this.fsp = fsp;
        this.path = path;
        this.execa = execa;
        this.executeWithDebugLogger = executeWithDebugLogger;
        this.existsSync = existsSync;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnBtX3BhY2thZ2VfbWFuYWdlcl9jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3BhY2thZ2UtbWFuYWdlci1jb250cm9sbGVyL25wbV9wYWNrYWdlX21hbmFnZXJfY29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxJQUFJLFdBQVcsRUFBRSxNQUFNLElBQUksQ0FBQztBQUMvQyxPQUFPLElBQUksTUFBTSxhQUFhLENBQUM7QUFDL0IsT0FBTyxFQUFFLEtBQUssSUFBSSxNQUFNLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFDeEMsT0FBTyxLQUFLLEtBQUssTUFBTSxNQUFNLENBQUM7QUFDOUIsT0FBTyxFQUFFLHNCQUFzQixJQUFJLHVCQUF1QixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDdEcsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFFcEY7O0dBRUc7QUFDSCxNQUFNLE9BQU8sMkJBQTRCLFNBQVEsNEJBQTRCO0lBS3REO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQVRyQjs7T0FFRztJQUNILFlBQ3FCLEdBQVcsRUFDWCxNQUFNLElBQUksRUFDVixPQUFPLEtBQUssRUFDWixRQUFRLE1BQU0sRUFDZCx5QkFBeUIsdUJBQXVCLEVBQ2hELGFBQWEsV0FBVztRQUUzQyxLQUFLLENBQ0gsR0FBRyxFQUNILEtBQUssRUFDTCxLQUFLLEVBQ0wsQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLEVBQ2pCLFNBQVMsRUFDVCxHQUFHLEVBQ0gsSUFBSSxFQUNKLEtBQUssRUFDTCxzQkFBc0IsRUFDdEIsVUFBVSxDQUNYLENBQUM7UUFsQmlCLFFBQUcsR0FBSCxHQUFHLENBQVE7UUFDWCxRQUFHLEdBQUgsR0FBRyxDQUFPO1FBQ1YsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUNaLFVBQUssR0FBTCxLQUFLLENBQVM7UUFDZCwyQkFBc0IsR0FBdEIsc0JBQXNCLENBQTBCO1FBQ2hELGVBQVUsR0FBVixVQUFVLENBQWM7SUFjN0MsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXhpc3RzU3luYyBhcyBfZXhpc3RzU3luYyB9IGZyb20gJ2ZzJztcbmltcG9ydCBfZnNwIGZyb20gJ2ZzL3Byb21pc2VzJztcbmltcG9ydCB7IGV4ZWNhIGFzIF9leGVjYSB9IGZyb20gJ2V4ZWNhJztcbmltcG9ydCAqIGFzIF9wYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHsgZXhlY3V0ZVdpdGhEZWJ1Z0xvZ2dlciBhcyBfZXhlY3V0ZVdpdGhEZWJ1Z0xvZ2dlciB9IGZyb20gJy4vZXhlY3V0ZV93aXRoX2RlYnVnZ2VyX2xvZ2dlci5qcyc7XG5pbXBvcnQgeyBQYWNrYWdlTWFuYWdlckNvbnRyb2xsZXJCYXNlIH0gZnJvbSAnLi9wYWNrYWdlX21hbmFnZXJfY29udHJvbGxlcl9iYXNlLmpzJztcblxuLyoqXG4gKiBOcG1QYWNrYWdlTWFuYWdlckNvbnRyb2xsZXIgaXMgYW4gYWJzdHJhY3Rpb24gYXJvdW5kIG5wbSBjb21tYW5kcyB0aGF0IGFyZSBuZWVkZWQgdG8gaW5pdGlhbGl6ZSBhIHByb2plY3QgYW5kIGluc3RhbGwgZGVwZW5kZW5jaWVzXG4gKi9cbmV4cG9ydCBjbGFzcyBOcG1QYWNrYWdlTWFuYWdlckNvbnRyb2xsZXIgZXh0ZW5kcyBQYWNrYWdlTWFuYWdlckNvbnRyb2xsZXJCYXNlIHtcbiAgLyoqXG4gICAqIGNvbnN0cnVjdG9yXG4gICAqL1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgY3dkOiBzdHJpbmcsXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGZzcCA9IF9mc3AsXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IHBhdGggPSBfcGF0aCxcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgZXhlY2EgPSBfZXhlY2EsXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGV4ZWN1dGVXaXRoRGVidWdMb2dnZXIgPSBfZXhlY3V0ZVdpdGhEZWJ1Z0xvZ2dlcixcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgZXhpc3RzU3luYyA9IF9leGlzdHNTeW5jXG4gICkge1xuICAgIHN1cGVyKFxuICAgICAgY3dkLFxuICAgICAgJ25wbScsXG4gICAgICAnbnB4JyxcbiAgICAgIFsnaW5pdCcsICctLXllcyddLFxuICAgICAgJ2luc3RhbGwnLFxuICAgICAgZnNwLFxuICAgICAgcGF0aCxcbiAgICAgIGV4ZWNhLFxuICAgICAgZXhlY3V0ZVdpdGhEZWJ1Z0xvZ2dlcixcbiAgICAgIGV4aXN0c1N5bmNcbiAgICApO1xuICB9XG59XG4iXX0=