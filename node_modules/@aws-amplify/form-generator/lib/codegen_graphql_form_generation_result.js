import path from 'path';
import fs from 'fs/promises';
/**
 * Encapsulates a result from a call to the codegen form generation service
 */
export class CodegenGraphqlFormGeneratorResult {
    fileNameComponentMap;
    /**
     * Creates a CodegenGraphqlFormGeneratorResponse
     */
    constructor(fileNameComponentMap) {
        this.fileNameComponentMap = fileNameComponentMap;
    }
    /**
     * writes the components to a given directory
     */
    writeToDirectory = async (directoryPath, 
    // TODO: update this type when Printer interface gets defined in platform-core.
    log) => {
        try {
            await fs.stat(directoryPath);
        }
        catch (e) {
            await fs.mkdir(directoryPath);
        }
        for (const [fileName, content] of Object.entries(this.fileNameComponentMap)) {
            if (content) {
                const filePath = path.join(directoryPath, fileName);
                const fd = await fs.open(filePath, 'w+');
                try {
                    await fd.writeFile(content);
                    log?.(`File written: ${path.relative(process.cwd(), filePath)}`);
                }
                finally {
                    await fd.close();
                }
            }
        }
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZWdlbl9ncmFwaHFsX2Zvcm1fZ2VuZXJhdGlvbl9yZXN1bHQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvY29kZWdlbl9ncmFwaHFsX2Zvcm1fZ2VuZXJhdGlvbl9yZXN1bHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBQ3hCLE9BQU8sRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUc3Qjs7R0FFRztBQUNILE1BQU0sT0FBTyxpQ0FBaUM7SUFNZjtJQUg3Qjs7T0FFRztJQUNILFlBQTZCLG9CQUE0QztRQUE1Qyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQXdCO0lBQUcsQ0FBQztJQUM3RTs7T0FFRztJQUNILGdCQUFnQixHQUFHLEtBQUssRUFDdEIsYUFBcUI7SUFDckIsK0VBQStFO0lBQy9FLEdBQStCLEVBQy9CLEVBQUU7UUFDRixJQUFJO1lBQ0YsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1NBQzlCO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDVixNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7U0FDL0I7UUFDRCxLQUFLLE1BQU0sQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FDOUMsSUFBSSxDQUFDLG9CQUFvQixDQUMxQixFQUFFO1lBQ0QsSUFBSSxPQUFPLEVBQUU7Z0JBQ1gsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsUUFBUSxDQUFDLENBQUM7Z0JBQ3BELE1BQU0sRUFBRSxHQUFHLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0JBQ3pDLElBQUk7b0JBQ0YsTUFBTSxFQUFFLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDO29CQUM1QixHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO2lCQUNsRTt3QkFBUztvQkFDUixNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztpQkFDbEI7YUFDRjtTQUNGO0lBQ0gsQ0FBQyxDQUFDO0NBQ0giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBmcyBmcm9tICdmcy9wcm9taXNlcyc7XG5pbXBvcnQgeyBHcmFwaHFsR2VuZXJhdGlvblJlc3VsdCB9IGZyb20gJy4vZ3JhcGhxbF9mb3JtX2dlbmVyYXRvci5qcyc7XG5cbi8qKlxuICogRW5jYXBzdWxhdGVzIGEgcmVzdWx0IGZyb20gYSBjYWxsIHRvIHRoZSBjb2RlZ2VuIGZvcm0gZ2VuZXJhdGlvbiBzZXJ2aWNlXG4gKi9cbmV4cG9ydCBjbGFzcyBDb2RlZ2VuR3JhcGhxbEZvcm1HZW5lcmF0b3JSZXN1bHRcbiAgaW1wbGVtZW50cyBHcmFwaHFsR2VuZXJhdGlvblJlc3VsdFxue1xuICAvKipcbiAgICogQ3JlYXRlcyBhIENvZGVnZW5HcmFwaHFsRm9ybUdlbmVyYXRvclJlc3BvbnNlXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGZpbGVOYW1lQ29tcG9uZW50TWFwOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+KSB7fVxuICAvKipcbiAgICogd3JpdGVzIHRoZSBjb21wb25lbnRzIHRvIGEgZ2l2ZW4gZGlyZWN0b3J5XG4gICAqL1xuICB3cml0ZVRvRGlyZWN0b3J5ID0gYXN5bmMgKFxuICAgIGRpcmVjdG9yeVBhdGg6IHN0cmluZyxcbiAgICAvLyBUT0RPOiB1cGRhdGUgdGhpcyB0eXBlIHdoZW4gUHJpbnRlciBpbnRlcmZhY2UgZ2V0cyBkZWZpbmVkIGluIHBsYXRmb3JtLWNvcmUuXG4gICAgbG9nPzogKG1lc3NhZ2U6IHN0cmluZykgPT4gdm9pZFxuICApID0+IHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgZnMuc3RhdChkaXJlY3RvcnlQYXRoKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBhd2FpdCBmcy5ta2RpcihkaXJlY3RvcnlQYXRoKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBbZmlsZU5hbWUsIGNvbnRlbnRdIG9mIE9iamVjdC5lbnRyaWVzKFxuICAgICAgdGhpcy5maWxlTmFtZUNvbXBvbmVudE1hcFxuICAgICkpIHtcbiAgICAgIGlmIChjb250ZW50KSB7XG4gICAgICAgIGNvbnN0IGZpbGVQYXRoID0gcGF0aC5qb2luKGRpcmVjdG9yeVBhdGgsIGZpbGVOYW1lKTtcbiAgICAgICAgY29uc3QgZmQgPSBhd2FpdCBmcy5vcGVuKGZpbGVQYXRoLCAndysnKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBhd2FpdCBmZC53cml0ZUZpbGUoY29udGVudCk7XG4gICAgICAgICAgbG9nPy4oYEZpbGUgd3JpdHRlbjogJHtwYXRoLnJlbGF0aXZlKHByb2Nlc3MuY3dkKCksIGZpbGVQYXRoKX1gKTtcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICBhd2FpdCBmZC5jbG9zZSgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9O1xufVxuIl19