/**
 * This error is thrown when there's a collision in
 */
export declare class ObjectAccumulatorPropertyAlreadyExistsError extends Error {
    readonly key: string;
    readonly existingValue: unknown;
    readonly incomingValue: unknown;
    /**
     * Creates property already exists error.
     */
    constructor(key: string, existingValue: unknown, incomingValue: unknown);
}
/**
 * A class that can accumulate (squash merge) objects into single instance.
 */
export declare class ObjectAccumulator<T> {
    private readonly accumulator;
    /**
     * creates object accumulator.
     */
    constructor(accumulator: Partial<T>);
    accumulate: (part: Partial<T>) => ObjectAccumulator<T>;
    getAccumulatedObject: () => Partial<T>;
}
//# sourceMappingURL=object_accumulator.d.ts.map