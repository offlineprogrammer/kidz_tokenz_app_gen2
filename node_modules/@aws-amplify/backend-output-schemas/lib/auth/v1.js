"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.authOutputSchema = void 0;
const zod_1 = require("zod");
// The values stored in the stack output is converted to string.
exports.authOutputSchema = zod_1.z.object({
    version: zod_1.z.literal('1'),
    payload: zod_1.z.object({
        authRegion: zod_1.z.string(),
        userPoolId: zod_1.z.string(),
        webClientId: zod_1.z.string(),
        identityPoolId: zod_1.z.string(),
        amazonClientId: zod_1.z.optional(zod_1.z.string()),
        appleClientId: zod_1.z.optional(zod_1.z.string()),
        facebookClientId: zod_1.z.optional(zod_1.z.string()),
        googleClientId: zod_1.z.optional(zod_1.z.string()),
        allowUnauthenticatedIdentities: zod_1.z.optional(zod_1.z.string()),
        usernameAttributes: zod_1.z.string().optional(),
        signupAttributes: zod_1.z.string().optional(),
        passwordPolicyMinLength: zod_1.z.string().optional(),
        passwordPolicyRequirements: zod_1.z.string().optional(),
        mfaConfiguration: zod_1.z.string().optional(),
        mfaTypes: zod_1.z.string().optional(),
        verificationMechanisms: zod_1.z.string().optional(),
        socialProviders: zod_1.z.string().optional(),
        oauthDomain: zod_1.z.string().optional(),
        oauthScope: zod_1.z.string().optional(),
        oauthRedirectSignIn: zod_1.z.string().optional(),
        oauthRedirectSignOut: zod_1.z.string().optional(),
        oauthClientId: zod_1.z.string().optional(),
        oauthResponseType: zod_1.z.string().optional(),
    }),
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXV0aC92MS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw2QkFBd0I7QUFFeEIsZ0VBQWdFO0FBQ25ELFFBQUEsZ0JBQWdCLEdBQUcsT0FBQyxDQUFDLE1BQU0sQ0FBQztJQUN2QyxPQUFPLEVBQUUsT0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUM7SUFDdkIsT0FBTyxFQUFFLE9BQUMsQ0FBQyxNQUFNLENBQUM7UUFDaEIsVUFBVSxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUU7UUFDdEIsVUFBVSxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUU7UUFDdEIsV0FBVyxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUU7UUFDdkIsY0FBYyxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUU7UUFDMUIsY0FBYyxFQUFFLE9BQUMsQ0FBQyxRQUFRLENBQUMsT0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ3RDLGFBQWEsRUFBRSxPQUFDLENBQUMsUUFBUSxDQUFDLE9BQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNyQyxnQkFBZ0IsRUFBRSxPQUFDLENBQUMsUUFBUSxDQUFDLE9BQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUN4QyxjQUFjLEVBQUUsT0FBQyxDQUFDLFFBQVEsQ0FBQyxPQUFDLENBQUMsTUFBTSxFQUFFLENBQUM7UUFFdEMsOEJBQThCLEVBQUUsT0FBQyxDQUFDLFFBQVEsQ0FBQyxPQUFDLENBQUMsTUFBTSxFQUFFLENBQUM7UUFFdEQsa0JBQWtCLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLFFBQVEsRUFBRTtRQUN6QyxnQkFBZ0IsRUFBRSxPQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsUUFBUSxFQUFFO1FBQ3ZDLHVCQUF1QixFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7UUFDOUMsMEJBQTBCLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLFFBQVEsRUFBRTtRQUNqRCxnQkFBZ0IsRUFBRSxPQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsUUFBUSxFQUFFO1FBQ3ZDLFFBQVEsRUFBRSxPQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsUUFBUSxFQUFFO1FBQy9CLHNCQUFzQixFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7UUFFN0MsZUFBZSxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7UUFFdEMsV0FBVyxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7UUFDbEMsVUFBVSxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7UUFDakMsbUJBQW1CLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLFFBQVEsRUFBRTtRQUMxQyxvQkFBb0IsRUFBRSxPQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsUUFBUSxFQUFFO1FBQzNDLGFBQWEsRUFBRSxPQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsUUFBUSxFQUFFO1FBQ3BDLGlCQUFpQixFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7S0FDekMsQ0FBQztDQUNILENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHogfSBmcm9tICd6b2QnO1xuXG4vLyBUaGUgdmFsdWVzIHN0b3JlZCBpbiB0aGUgc3RhY2sgb3V0cHV0IGlzIGNvbnZlcnRlZCB0byBzdHJpbmcuXG5leHBvcnQgY29uc3QgYXV0aE91dHB1dFNjaGVtYSA9IHoub2JqZWN0KHtcbiAgdmVyc2lvbjogei5saXRlcmFsKCcxJyksXG4gIHBheWxvYWQ6IHoub2JqZWN0KHtcbiAgICBhdXRoUmVnaW9uOiB6LnN0cmluZygpLFxuICAgIHVzZXJQb29sSWQ6IHouc3RyaW5nKCksXG4gICAgd2ViQ2xpZW50SWQ6IHouc3RyaW5nKCksXG4gICAgaWRlbnRpdHlQb29sSWQ6IHouc3RyaW5nKCksXG4gICAgYW1hem9uQ2xpZW50SWQ6IHoub3B0aW9uYWwoei5zdHJpbmcoKSksXG4gICAgYXBwbGVDbGllbnRJZDogei5vcHRpb25hbCh6LnN0cmluZygpKSxcbiAgICBmYWNlYm9va0NsaWVudElkOiB6Lm9wdGlvbmFsKHouc3RyaW5nKCkpLFxuICAgIGdvb2dsZUNsaWVudElkOiB6Lm9wdGlvbmFsKHouc3RyaW5nKCkpLFxuXG4gICAgYWxsb3dVbmF1dGhlbnRpY2F0ZWRJZGVudGl0aWVzOiB6Lm9wdGlvbmFsKHouc3RyaW5nKCkpLCAvLyBib29sZWFuIGFzIHN0cmluZyAndHJ1ZScgfCAnZmFsc2UnXG5cbiAgICB1c2VybmFtZUF0dHJpYnV0ZXM6IHouc3RyaW5nKCkub3B0aW9uYWwoKSwgLy8gSlNPTiBhcnJheSBhcyBzdHJpbmdcbiAgICBzaWdudXBBdHRyaWJ1dGVzOiB6LnN0cmluZygpLm9wdGlvbmFsKCksIC8vIEpTT04gYXJyYXkgYXMgc3RyaW5nXG4gICAgcGFzc3dvcmRQb2xpY3lNaW5MZW5ndGg6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICBwYXNzd29yZFBvbGljeVJlcXVpcmVtZW50czogei5zdHJpbmcoKS5vcHRpb25hbCgpLCAvLyBKU09OIGFycmF5IGFzIHN0cmluZ1xuICAgIG1mYUNvbmZpZ3VyYXRpb246IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICBtZmFUeXBlczogei5zdHJpbmcoKS5vcHRpb25hbCgpLCAvLyBKU09OIGFycmF5IGFzIHN0cmluZ1xuICAgIHZlcmlmaWNhdGlvbk1lY2hhbmlzbXM6IHouc3RyaW5nKCkub3B0aW9uYWwoKSwgLy8gSlNPTiBhcnJheSBhcyBzdHJpbmdcblxuICAgIHNvY2lhbFByb3ZpZGVyczogei5zdHJpbmcoKS5vcHRpb25hbCgpLCAvLyBKU09OIGFycmF5IGFzIHN0cmluZ1xuXG4gICAgb2F1dGhEb21haW46IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICBvYXV0aFNjb3BlOiB6LnN0cmluZygpLm9wdGlvbmFsKCksIC8vIEpTT04gYXJyYXkgYXMgc3RyaW5nXG4gICAgb2F1dGhSZWRpcmVjdFNpZ25Jbjogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICAgIG9hdXRoUmVkaXJlY3RTaWduT3V0OiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gICAgb2F1dGhDbGllbnRJZDogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICAgIG9hdXRoUmVzcG9uc2VUeXBlOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIH0pLFxufSk7XG4iXX0=