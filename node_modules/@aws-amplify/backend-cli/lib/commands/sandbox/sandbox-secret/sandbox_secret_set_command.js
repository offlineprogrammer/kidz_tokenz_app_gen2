import { AmplifyPrompter } from '@aws-amplify/cli-core';
/**
 * Command to set sandbox secret.
 */
export class SandboxSecretSetCommand {
    sandboxIdResolver;
    secretClient;
    /**
     * @inheritDoc
     */
    command;
    /**
     * @inheritDoc
     */
    describe;
    /**
     * Set sandbox secret command.
     */
    constructor(sandboxIdResolver, secretClient) {
        this.sandboxIdResolver = sandboxIdResolver;
        this.secretClient = secretClient;
        this.command = 'set <secret-name>';
        this.describe = 'Set a sandbox secret';
    }
    /**
     * @inheritDoc
     */
    handler = async (args) => {
        const secretVal = await AmplifyPrompter.secretValue();
        await this.secretClient.setSecret(await this.sandboxIdResolver.resolve(), args['secret-name'], secretVal);
    };
    /**
     * @inheritDoc
     */
    builder = (yargs) => {
        return yargs.positional('secret-name', {
            describe: 'Name of the secret to set',
            type: 'string',
            demandOption: true,
        });
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FuZGJveF9zZWNyZXRfc2V0X2NvbW1hbmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tbWFuZHMvc2FuZGJveC9zYW5kYm94LXNlY3JldC9zYW5kYm94X3NlY3JldF9zZXRfY29tbWFuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFJeEQ7O0dBRUc7QUFDSCxNQUFNLE9BQU8sdUJBQXVCO0lBaUJmO0lBQ0E7SUFmbkI7O09BRUc7SUFDTSxPQUFPLENBQVM7SUFFekI7O09BRUc7SUFDTSxRQUFRLENBQVM7SUFFMUI7O09BRUc7SUFDSCxZQUNtQixpQkFBMkMsRUFDM0MsWUFBMEI7UUFEMUIsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUEwQjtRQUMzQyxpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUUzQyxJQUFJLENBQUMsT0FBTyxHQUFHLG1CQUFtQixDQUFDO1FBQ25DLElBQUksQ0FBQyxRQUFRLEdBQUcsc0JBQXNCLENBQUM7SUFDekMsQ0FBQztJQUVEOztPQUVHO0lBQ0gsT0FBTyxHQUFHLEtBQUssRUFBRSxJQUE2QixFQUFpQixFQUFFO1FBQy9ELE1BQU0sU0FBUyxHQUFHLE1BQU0sZUFBZSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3RELE1BQU0sSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQy9CLE1BQU0sSUFBSSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sRUFBRSxFQUN0QyxJQUFJLENBQUMsYUFBYSxDQUFDLEVBQ25CLFNBQVMsQ0FDVixDQUFDO0lBQ0osQ0FBQyxDQUFDO0lBRUY7O09BRUc7SUFDSCxPQUFPLEdBQUcsQ0FBQyxLQUFXLEVBQWlDLEVBQUU7UUFDdkQsT0FBTyxLQUFLLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRTtZQUNyQyxRQUFRLEVBQUUsMkJBQTJCO1lBQ3JDLElBQUksRUFBRSxRQUFRO1lBQ2QsWUFBWSxFQUFFLElBQUk7U0FDbkIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDO0NBQ0giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcmd2LCBDb21tYW5kTW9kdWxlIH0gZnJvbSAneWFyZ3MnO1xuaW1wb3J0IHsgU2VjcmV0Q2xpZW50IH0gZnJvbSAnQGF3cy1hbXBsaWZ5L2JhY2tlbmQtc2VjcmV0JztcbmltcG9ydCB7IFNhbmRib3hCYWNrZW5kSWRSZXNvbHZlciB9IGZyb20gJy4uL3NhbmRib3hfaWRfcmVzb2x2ZXIuanMnO1xuaW1wb3J0IHsgQW1wbGlmeVByb21wdGVyIH0gZnJvbSAnQGF3cy1hbXBsaWZ5L2NsaS1jb3JlJztcblxuaW1wb3J0IHsgQXJndW1lbnRzS2ViYWJDYXNlIH0gZnJvbSAnLi4vLi4vLi4va2ViYWJfY2FzZS5qcyc7XG5cbi8qKlxuICogQ29tbWFuZCB0byBzZXQgc2FuZGJveCBzZWNyZXQuXG4gKi9cbmV4cG9ydCBjbGFzcyBTYW5kYm94U2VjcmV0U2V0Q29tbWFuZFxuICBpbXBsZW1lbnRzIENvbW1hbmRNb2R1bGU8b2JqZWN0LCBTZWNyZXRTZXRDb21tYW5kT3B0aW9ucz5cbntcbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICByZWFkb25seSBjb21tYW5kOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICByZWFkb25seSBkZXNjcmliZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBTZXQgc2FuZGJveCBzZWNyZXQgY29tbWFuZC5cbiAgICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcmVhZG9ubHkgc2FuZGJveElkUmVzb2x2ZXI6IFNhbmRib3hCYWNrZW5kSWRSZXNvbHZlcixcbiAgICBwcml2YXRlIHJlYWRvbmx5IHNlY3JldENsaWVudDogU2VjcmV0Q2xpZW50XG4gICkge1xuICAgIHRoaXMuY29tbWFuZCA9ICdzZXQgPHNlY3JldC1uYW1lPic7XG4gICAgdGhpcy5kZXNjcmliZSA9ICdTZXQgYSBzYW5kYm94IHNlY3JldCc7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gIGhhbmRsZXIgPSBhc3luYyAoYXJnczogU2VjcmV0U2V0Q29tbWFuZE9wdGlvbnMpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgICBjb25zdCBzZWNyZXRWYWwgPSBhd2FpdCBBbXBsaWZ5UHJvbXB0ZXIuc2VjcmV0VmFsdWUoKTtcbiAgICBhd2FpdCB0aGlzLnNlY3JldENsaWVudC5zZXRTZWNyZXQoXG4gICAgICBhd2FpdCB0aGlzLnNhbmRib3hJZFJlc29sdmVyLnJlc29sdmUoKSxcbiAgICAgIGFyZ3NbJ3NlY3JldC1uYW1lJ10sXG4gICAgICBzZWNyZXRWYWxcbiAgICApO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgYnVpbGRlciA9ICh5YXJnczogQXJndik6IEFyZ3Y8U2VjcmV0U2V0Q29tbWFuZE9wdGlvbnM+ID0+IHtcbiAgICByZXR1cm4geWFyZ3MucG9zaXRpb25hbCgnc2VjcmV0LW5hbWUnLCB7XG4gICAgICBkZXNjcmliZTogJ05hbWUgb2YgdGhlIHNlY3JldCB0byBzZXQnLFxuICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICBkZW1hbmRPcHRpb246IHRydWUsXG4gICAgfSk7XG4gIH07XG59XG5cbnR5cGUgU2VjcmV0U2V0Q29tbWFuZE9wdGlvbnMgPVxuICBBcmd1bWVudHNLZWJhYkNhc2U8U2VjcmV0U2V0Q29tbWFuZE9wdGlvbnNDYW1lbENhc2U+O1xuXG50eXBlIFNlY3JldFNldENvbW1hbmRPcHRpb25zQ2FtZWxDYXNlID0ge1xuICBzZWNyZXROYW1lOiBzdHJpbmc7XG59O1xuIl19