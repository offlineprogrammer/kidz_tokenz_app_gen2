import { printer } from '../../../printer.js';
/**
 * Command to list sandbox secrets.
 */
export class SandboxSecretListCommand {
    sandboxIdResolver;
    secretClient;
    /**
     * @inheritDoc
     */
    command;
    /**
     * @inheritDoc
     */
    describe;
    /**
     * List sandbox secret command.
     */
    constructor(sandboxIdResolver, secretClient) {
        this.sandboxIdResolver = sandboxIdResolver;
        this.secretClient = secretClient;
        this.command = 'list';
        this.describe = 'List all sandbox secrets';
    }
    /**
     * @inheritDoc
     */
    handler = async () => {
        const sandboxBackendIdentifier = await this.sandboxIdResolver.resolve();
        const secretIds = await this.secretClient.listSecrets(sandboxBackendIdentifier);
        printer.printRecords({
            names: secretIds.map((secretId) => secretId.name),
        });
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FuZGJveF9zZWNyZXRfbGlzdF9jb21tYW5kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbW1hbmRzL3NhbmRib3gvc2FuZGJveC1zZWNyZXQvc2FuZGJveF9zZWNyZXRfbGlzdF9jb21tYW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUU5Qzs7R0FFRztBQUNILE1BQU0sT0FBTyx3QkFBd0I7SUFlaEI7SUFDQTtJQWZuQjs7T0FFRztJQUNNLE9BQU8sQ0FBUztJQUV6Qjs7T0FFRztJQUNNLFFBQVEsQ0FBUztJQUUxQjs7T0FFRztJQUNILFlBQ21CLGlCQUEyQyxFQUMzQyxZQUEwQjtRQUQxQixzQkFBaUIsR0FBakIsaUJBQWlCLENBQTBCO1FBQzNDLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBRTNDLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxRQUFRLEdBQUcsMEJBQTBCLENBQUM7SUFDN0MsQ0FBQztJQUVEOztPQUVHO0lBQ0gsT0FBTyxHQUFHLEtBQUssSUFBbUIsRUFBRTtRQUNsQyxNQUFNLHdCQUF3QixHQUFHLE1BQU0sSUFBSSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ3hFLE1BQU0sU0FBUyxHQUFHLE1BQU0sSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQ25ELHdCQUF3QixDQUN6QixDQUFDO1FBRUYsT0FBTyxDQUFDLFlBQVksQ0FBQztZQUNuQixLQUFLLEVBQUUsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQztTQUNsRCxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUM7Q0FDSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1hbmRNb2R1bGUgfSBmcm9tICd5YXJncyc7XG5pbXBvcnQgeyBTZWNyZXRDbGllbnQgfSBmcm9tICdAYXdzLWFtcGxpZnkvYmFja2VuZC1zZWNyZXQnO1xuaW1wb3J0IHsgU2FuZGJveEJhY2tlbmRJZFJlc29sdmVyIH0gZnJvbSAnLi4vc2FuZGJveF9pZF9yZXNvbHZlci5qcyc7XG5pbXBvcnQgeyBwcmludGVyIH0gZnJvbSAnLi4vLi4vLi4vcHJpbnRlci5qcyc7XG5cbi8qKlxuICogQ29tbWFuZCB0byBsaXN0IHNhbmRib3ggc2VjcmV0cy5cbiAqL1xuZXhwb3J0IGNsYXNzIFNhbmRib3hTZWNyZXRMaXN0Q29tbWFuZCBpbXBsZW1lbnRzIENvbW1hbmRNb2R1bGU8b2JqZWN0PiB7XG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgcmVhZG9ubHkgY29tbWFuZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgcmVhZG9ubHkgZGVzY3JpYmU6IHN0cmluZztcblxuICAvKipcbiAgICogTGlzdCBzYW5kYm94IHNlY3JldCBjb21tYW5kLlxuICAgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSByZWFkb25seSBzYW5kYm94SWRSZXNvbHZlcjogU2FuZGJveEJhY2tlbmRJZFJlc29sdmVyLFxuICAgIHByaXZhdGUgcmVhZG9ubHkgc2VjcmV0Q2xpZW50OiBTZWNyZXRDbGllbnRcbiAgKSB7XG4gICAgdGhpcy5jb21tYW5kID0gJ2xpc3QnO1xuICAgIHRoaXMuZGVzY3JpYmUgPSAnTGlzdCBhbGwgc2FuZGJveCBzZWNyZXRzJztcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgaGFuZGxlciA9IGFzeW5jICgpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgICBjb25zdCBzYW5kYm94QmFja2VuZElkZW50aWZpZXIgPSBhd2FpdCB0aGlzLnNhbmRib3hJZFJlc29sdmVyLnJlc29sdmUoKTtcbiAgICBjb25zdCBzZWNyZXRJZHMgPSBhd2FpdCB0aGlzLnNlY3JldENsaWVudC5saXN0U2VjcmV0cyhcbiAgICAgIHNhbmRib3hCYWNrZW5kSWRlbnRpZmllclxuICAgICk7XG5cbiAgICBwcmludGVyLnByaW50UmVjb3Jkcyh7XG4gICAgICBuYW1lczogc2VjcmV0SWRzLm1hcCgoc2VjcmV0SWQpID0+IHNlY3JldElkLm5hbWUpLFxuICAgIH0pO1xuICB9O1xufVxuIl19